name: 🧪 Test GnFortress Docker Security Scanner

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      test-image:
        description: 'Docker image to test (default: nginx:latest)'
        required: false
        default: 'nginx:latest'

jobs:
  basic-test:
    name: "🔍 Basic Security Scan Test"
    runs-on: ubuntu-latest
    
    steps:
      - name: "📥 Checkout repository"
        uses: actions/checkout@v4
      
      - name: "🏰 Run GnFortress Docker Security Scanner"
        id: security-scan
        uses: ./
        with:
          image: 'nginx:latest'
          severity-threshold: 'MEDIUM'
          output-format: 'table'
          fail-on-critical: 'false'
      
      - name: "📊 Display Scan Results"
        run: |
          echo "🏆 Scan completed successfully!"
          echo "📈 Vulnerability Count: ${{ steps.security-scan.outputs.vulnerability-count }}"
          echo "🔴 Critical: ${{ steps.security-scan.outputs.critical-count }}"
          echo "🟠 High: ${{ steps.security-scan.outputs.high-count }}"
          echo "🟡 Medium: ${{ steps.security-scan.outputs.medium-count }}"
          echo "🟢 Low: ${{ steps.security-scan.outputs.low-count }}"
          echo "✅ Status: ${{ steps.security-scan.outputs.scan-status }}"

  multi-image-test:
    name: "🔄 Multiple Images Test"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test-image: 
          - 'nginx:latest'
          - 'alpine:latest'
          - 'node:18'
        severity: ['HIGH', 'MEDIUM', 'LOW']
    
    steps:
      - name: "📥 Checkout repository"
        uses: actions/checkout@v4
      
      - name: "🔍 Scan ${{ matrix.test-image }} (Severity: ${{ matrix.severity }})"
        uses: ./
        with:
          image: ${{ matrix.test-image }}
          severity-threshold: ${{ matrix.severity }}
          output-format: 'json'

  performance-test:
    name: "⚡ Performance Test"
    runs-on: ubuntu-latest
    
    steps:
      - name: "📥 Checkout repository"
        uses: actions/checkout@v4

      - name: "⏱️ Measure scan time"
        id: timer
        run: echo "start_time=$(date +%s)" >> $GITHUB_OUTPUT

      - name: "🚀 Quick scan test"
        uses: ./
        with:
          image: 'alpine:latest'
          severity-threshold: 'HIGH'
          cache-enabled: 'true'

      - name: "📊 Calculate execution time"
        run: |
          END_TIME=$(date +%s)
          START_TIME=${{ steps.timer.outputs.start_time }}
          DURATION=$((END_TIME - START_TIME))
          echo "⏱️ Total execution time: ${DURATION} seconds"
          if [ $DURATION -lt 300 ]; then
            echo "✅ Performance test PASSED (under 5 minutes)"
          else
            echo "⚠️ Performance test WARNING (over 5 minutes)"
          fi

  error-handling-test:
    name: "🔧 Error Handling Test"
    runs-on: ubuntu-latest
    
    steps:
      - name: "📥 Checkout repository"
        uses: actions/checkout@v4

      - name: "❌ Test with invalid image (should fail gracefully)"
        uses: ./
        continue-on-error: true
        with:
          image: 'invalid-image-name-123456'
          severity-threshold: 'HIGH'
      
      - name: "✅ Test with empty image name (should fail gracefully)"  
        uses: ./
        continue-on-error: true
        with:
          image: ' '  # 공백으로 처리하여 getInput required 에러 방지
          severity-threshold: 'MEDIUM'
