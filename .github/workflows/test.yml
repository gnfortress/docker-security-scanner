name: 🧪 Test GnFortress Scanner

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:  # 수동 실행 가능

jobs:
  test-scanner:
    runs-on: ubuntu-latest
    name: Test Docker Security Scanner
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
      
      - name: 🏰 Test Security Scan - Clean Image
        id: clean-scan
        uses: ./  # 현재 저장소의 액션 사용
        with:
          image: 'hello-world:latest'
          slack-webhook: ${{ secrets.SLACK_WEBHOOK }}  # 선택사항
          
      - name: 📊 Show Clean Results
        run: |
          echo "Clean Image Scan Results:"
          echo "Status: ${{ steps.clean-scan.outputs.scan-status }}"
          echo "Vulnerabilities: ${{ steps.clean-scan.outputs.vulnerability-count }}"
          echo "Critical: ${{ steps.clean-scan.outputs.critical-count }}"
          
      - name: 🏰 Test Security Scan - Vulnerable Image  
        id: vuln-scan
        uses: ./
        with:
          image: 'nginx:1.14'  # 오래된 버전 (취약점 있을 가능성)
          severity-threshold: 'MEDIUM'
          fail-on-critical: 'false'  # 테스트이므로 실패하지 않음
        continue-on-error: true  # 취약점이 있어도 워크플로우 계속 진행
          
      - name: 📊 Show Vulnerable Results
        run: |
          echo "Vulnerable Image Scan Results:"
          echo "Status: ${{ steps.vuln-scan.outputs.scan-status }}"
          echo "Vulnerabilities: ${{ steps.vuln-scan.outputs.vulnerability-count }}"
          echo "Critical: ${{ steps.vuln-scan.outputs.critical-count }}"
          echo "High: ${{ steps.vuln-scan.outputs.high-count }}"
          
      - name: 📄 Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            trivy-results.json
            trivy-results.table
        if: always()